---
import SecuritySettings from '../SecuritySettings.astro';
import OllamaHelper from '../OllamaHelper.astro';
---

<div id="panel-settings" class="flex-1 flex flex-col hidden app-panel">
  <div class="p-6 max-w-4xl mx-auto w-full">
    <!-- Panel Header -->
    <div class="panel-section-header">
      <div class="header-left-section">
        <div class="section-title">
          <svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
          </svg>
          Settings
        </div>
      </div>
    </div>

    <!-- Panel Description -->
    <div class="mb-6">
      <p class="text-on-surface-variant text-sm">Customize your AI experience, appearance, and privacy preferences</p>
    </div>
    
    <!-- Settings Navigation -->
    <div class="settings-navigation mb-8">
      <div class="nav-pills">
        <button class="nav-pill active" data-anchor="ai">
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
          </svg>
          AI & Chat
        </button>
        <button class="nav-pill" data-anchor="appearance">
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zM21 5a2 2 0 00-2-2h-4a2 2 0 00-2 2v12a4 4 0 004 4h4a2 2 0 002-2V5z"/>
          </svg>
          Appearance
        </button>
        <button class="nav-pill" data-anchor="privacy">
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"/>
          </svg>
          Privacy
        </button>
        <button class="nav-pill" data-anchor="security">
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"/>
          </svg>
          Security
        </button>
      </div>
    </div>

    <!-- Settings Content - Single Scrollable List -->
    <div class="settings-content">
      <!-- AI & Chat Section -->
      <section id="ai" class="settings-section">
        <h3 class="section-header">
          <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
          </svg>
          AI & Chat
        </h3>
        
        <div class="setting-group">
          <h4 class="setting-title">AI Model</h4>
          <div class="custom-select-wrapper">
            <select id="model-select" class="custom-select">
              <option>Loading models...</option>
            </select>
            <svg class="select-arrow" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
            </svg>
          </div>
          <p class="setting-description">Choose which AI model to use for conversations</p>
        </div>

        <div class="setting-group">
          <h4 class="setting-title">Ollama Configuration</h4>
          <p class="setting-description">Manage your local AI models and connection</p>
          <button class="btn-outlined" onclick="showOllamaHelper()">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
            </svg>
            Setup & Manage Ollama
          </button>
        </div>

        <div class="setting-group">
          <h4 class="setting-title">Voice Responses</h4>
          <div class="material-switch">
            <input type="checkbox" id="tts-enabled" />
            <div class="switch-track">
              <div class="switch-thumb"></div>
            </div>
            <label for="tts-enabled" class="switch-label">Enable text-to-speech responses</label>
          </div>
          <p class="setting-description">Hear AI responses spoken aloud</p>
        </div>
      </section>

      <!-- Appearance Section -->
      <section id="appearance" class="settings-section">
        <h3 class="section-header">
          <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zM21 5a2 2 0 00-2-2h-4a2 2 0 00-2 2v12a4 4 0 004 4h4a2 2 0 002-2V5z"/>
          </svg>
          Appearance
        </h3>
        
        <div class="setting-group">
          <h4 class="setting-title">Display Mode</h4>
          <div class="custom-select-wrapper">
            <select id="theme-mode-select" class="custom-select">
              <option value="auto">Auto (Follow System)</option>
              <option value="light">Light Mode</option>
              <option value="dark">Dark Mode</option>
            </select>
            <svg class="select-arrow" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
            </svg>
          </div>
          <p class="setting-description">Choose between light, dark, or automatic theme</p>
        </div>

        <div class="setting-group">
          <h4 class="setting-title">Accent Color</h4>
          <div class="color-theme-grid">
            <button class="color-theme-card active" data-theme="smile">
              <div class="color-preview" style="background: linear-gradient(135deg, #3b82f6, #1d4ed8);"></div>
              <span>Ocean Blue</span>
            </button>
            <button class="color-theme-card" data-theme="forest">
              <div class="color-preview" style="background: linear-gradient(135deg, #10b981, #059669);"></div>
              <span>Forest Green</span>
            </button>
            <button class="color-theme-card" data-theme="sunset">
              <div class="color-preview" style="background: linear-gradient(135deg, #f59e0b, #d97706);"></div>
              <span>Sunset Orange</span>
            </button>
            <button class="color-theme-card" data-theme="lavender">
              <div class="color-preview" style="background: linear-gradient(135deg, #8b5cf6, #7c3aed);"></div>
              <span>Lavender Purple</span>
            </button>
          </div>
          <p class="setting-description">Choose your preferred accent color</p>
        </div>
      </section>

      <!-- Privacy Section -->
      <section id="privacy" class="settings-section">
        <h3 class="section-header">
          <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"/>
          </svg>
          Privacy
        </h3>
        
        <div class="setting-group">
          <h4 class="setting-title">Clear All Data</h4>
          <button id="clear-data-btn" class="btn-outlined">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
            </svg>
            Clear All Data
          </button>
          <p class="setting-description">Remove all chat history and preferences from local storage</p>
        </div>
      </section>

      <!-- Security Section -->
      <section id="security" class="settings-section">
        <h3 class="section-header">
          <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"/>
          </svg>
          Security
        </h3>
        
        <!-- Import Security Settings Component -->
        <SecuritySettings />
      </section>
    </div>
  </div>
</div>

<!-- Ollama Helper Modal -->
<div id="ollama-helper-modal" class="global-modal" style="display: none;">
  <div class="global-modal-backdrop"></div>
  <div class="global-modal-container">
    <div class="global-modal-content ollama-modal-content">
      <div class="ollama-modal-header">
        <div class="ollama-modal-icon">
          <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
          </svg>
        </div>
        <div class="ollama-modal-text">
          <h3 class="ollama-modal-title">Ollama Setup & Management</h3>
          <p class="ollama-modal-message">Configure your local AI models and connection</p>
        </div>
        <button class="ollama-close-btn" onclick="closeOllamaHelper()">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
          </svg>
        </button>
      </div>
      <div class="ollama-modal-body">
        <OllamaHelper />
      </div>
    </div>
  </div>
</div>

<script>
// Global function to show Ollama helper
(window as any).showOllamaHelper = function() {
  const modal = document.getElementById('ollama-helper-modal');
  if (modal) {
    modal.style.display = 'flex';
    modal.classList.remove('hidden');
    // Force reflow
    modal.offsetHeight;
    modal.classList.add('show');
    modal.setAttribute('aria-hidden', 'false');
    document.body.style.overflow = 'hidden';
    
    // Initialize Ollama connection check
    setTimeout(() => {
      if (typeof (window as any).checkOllamaConnection === 'function') {
        (window as any).checkOllamaConnection();
      }
    }, 100);
  }
};

// Global function to close Ollama helper
(window as any).closeOllamaHelper = function() {
  const modal = document.getElementById('ollama-helper-modal');
  if (modal) {
    modal.classList.remove('show');
    modal.setAttribute('aria-hidden', 'true');
    document.body.style.overflow = '';
    setTimeout(() => {
      modal.style.display = 'none';
      modal.classList.add('hidden');
    }, 300);
  }
};

// Add CSS styling for the Ollama modal
const ollamaModalStyles = `
  .ollama-modal-content {
    max-width: 700px;
    width: 100%;
    max-height: 85vh;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
  }
  
  .ollama-modal-header {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    padding: 2rem 2.5rem 1.5rem;
    border-bottom: 1px solid rgba(var(--md-outline-variant), 0.2);
    position: relative;
  }
  
  .ollama-modal-icon {
    width: 4rem;
    height: 4rem;
    background: linear-gradient(135deg, rgb(var(--md-primary)), rgb(var(--md-secondary)));
    border-radius: 1rem;
    display: flex;
    align-items: center;
    justify-content: center;
    color: rgb(var(--md-on-primary));
    flex-shrink: 0;
  }
  
  .ollama-modal-text {
    flex: 1;
  }
  
  .ollama-modal-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: rgb(var(--md-on-surface));
    margin: 0 0 0.5rem 0;
  }
  
  .ollama-modal-message {
    font-size: 1rem;
    color: rgb(var(--md-on-surface-variant));
    margin: 0;
    opacity: 0.8;
  }
  
  .ollama-close-btn {
    position: absolute;
    top: 1.5rem;
    right: 1.5rem;
    width: 3rem;
    height: 3rem;
    background: rgba(var(--md-surface-container-highest), 0.8);
    border: 1px solid rgba(var(--md-outline-variant), 0.3);
    border-radius: 50%;
    color: rgb(var(--md-on-surface-variant));
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    backdrop-filter: blur(8px);
  }
  
  .ollama-close-btn:hover {
    background: rgba(var(--md-error), 0.1);
    border-color: rgba(var(--md-error), 0.3);
    color: rgb(var(--md-error));
    transform: scale(1.05);
  }
  
  .ollama-modal-body {
    padding: 2rem 2.5rem;
    flex: 1;
    overflow-y: auto;
  }
  
  @media (max-width: 768px) {
    .ollama-modal-content {
      max-width: 95vw;
      width: 95vw;
      max-height: 95vh;
      margin: 1rem;
    }
    
    .ollama-modal-header {
      padding: 1.5rem 2rem 1rem;
      gap: 1rem;
    }
    
    .ollama-modal-icon {
      width: 3rem;
      height: 3rem;
    }
    
    .ollama-modal-title {
      font-size: 1.25rem;
    }
    
    .ollama-modal-message {
      font-size: 0.875rem;
    }
    
    .ollama-close-btn {
      top: 1rem;
      right: 1rem;
      width: 2.5rem;
      height: 2.5rem;
    }
    
    .ollama-modal-body {
      padding: 1.5rem 2rem;
    }
  }
`;

// Inject styles
if (!document.getElementById('ollama-modal-styles')) {
  const styleSheet = document.createElement('style');
  styleSheet.id = 'ollama-modal-styles';
  styleSheet.textContent = ollamaModalStyles;
  document.head.appendChild(styleSheet);
}

// Close modal when clicking backdrop
document.addEventListener('click', (e) => {
  const modal = document.getElementById('ollama-helper-modal');
  if (modal && e.target === modal.querySelector('.global-modal-backdrop')) {
    (window as any).closeOllamaHelper();
  }
});

// Close modal with Escape key
document.addEventListener('keydown', (e) => {
  if (e.key === 'Escape') {
    const modal = document.getElementById('ollama-helper-modal');
    if (modal && !modal.classList.contains('hidden')) {
      (window as any).closeOllamaHelper();
    }
  }
});

// Settings navigation functionality
document.addEventListener('DOMContentLoaded', () => {
  const navPills = document.querySelectorAll('.nav-pill');
  const sections = document.querySelectorAll('.settings-section');
  
  // Handle navigation pill clicks
  navPills.forEach(pill => {
    pill.addEventListener('click', (e) => {
      e.preventDefault();
      const anchor = pill.getAttribute('data-anchor');
      if (anchor) {
        // Update active pill
        navPills.forEach(p => p.classList.remove('active'));
        pill.classList.add('active');
        
        // Scroll to section
        const targetSection = document.getElementById(anchor);
        if (targetSection) {
          targetSection.scrollIntoView({ 
            behavior: 'smooth', 
            block: 'start' 
          });
        }
      }
    });
  });
  
  // Update active pill based on scroll position
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const sectionId = entry.target.id;
        navPills.forEach(pill => {
          pill.classList.remove('active');
          if (pill.getAttribute('data-anchor') === sectionId) {
            pill.classList.add('active');
          }
        });
      }
    });
  }, {
    threshold: 0.3,
    rootMargin: '-20% 0px -70% 0px'
  });
  
  sections.forEach(section => {
    observer.observe(section);
  });
});

// Initialize model loading when settings panel is first shown
document.addEventListener('DOMContentLoaded', () => {
  // Check for models when AI tab becomes active
  const aiTab = document.querySelector('[data-tab="ai"]');
  if (aiTab) {
    aiTab.addEventListener('click', () => {
      setTimeout(() => {
        (window as any).checkSettingsOllamaConnection();
      }, 100);
    });
  }
  
  // Load models on first load if AI tab is active
  if (aiTab && aiTab.classList.contains('active')) {
    setTimeout(() => {
      (window as any).checkSettingsOllamaConnection();
    }, 500);
  }
});
</script>
